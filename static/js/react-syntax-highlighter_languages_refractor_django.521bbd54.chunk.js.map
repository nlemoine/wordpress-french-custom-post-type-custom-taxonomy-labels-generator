{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_django.521bbd54.chunk.js","mappings":"wHACA,IAAIA,EAA4BC,EAAQ,KAIxC,SAASC,EAAOC,GACdA,EAAMC,SAASJ,GAGd,SAAWG,GACVA,EAAME,UAAUH,OAAS,CACvBI,QAAS,iBACTC,IAAK,CACHC,QAAS,mBACTC,YAAY,EACZC,MAAO,WAETC,UAAW,CACTH,QAAS,0BACTE,MAAO,eAETE,OAAQ,CACNJ,QAAS,kCACTK,QAAQ,GAEVC,OAAQ,CACNN,QAAS,UACTC,YAAY,EACZC,MAAO,YAETK,KAAM,CACJP,QAAS,mCACTC,YAAY,EACZC,MAAO,YAETM,SAAU,wBACVC,QAAS,gFACTC,SAAU,sDACVC,OAAQ,oBACRC,QAAS,2BACTC,SAAU,WACVC,YAAa,iBAEf,IAAId,EAAU,0CACVe,EAAmBpB,EAAME,UAAU,qBACvCF,EAAMqB,MAAMC,IAAI,mBAAmB,SAAUC,GAC3CH,EAAiBI,kBAAkBD,EAAK,SAAUlB,MAEpDL,EAAMqB,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CH,EAAiBK,qBAAqBF,EAAK,aAE7CvB,EAAME,UAAUwB,OAAS1B,EAAME,UAAUH,OACzCC,EAAMqB,MAAMC,IAAI,mBAAmB,SAAUC,GAC3CH,EAAiBI,kBAAkBD,EAAK,SAAUlB,MAEpDL,EAAMqB,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CH,EAAiBK,qBAAqBF,EAAK,aA/C9C,CAiDEvB,GAxDL2B,EAAOC,QAAU7B,EACjBA,EAAO8B,YAAc,SACrB9B,EAAO+B,QAAU,CAAC","sources":["../node_modules/refractor/lang/django.js"],"sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^{#[\\s\\S]*?#}$/,\n      tag: {\n        pattern: /(^{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^{[{%][+-]?|[+-]?[}%]}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword: /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+*/%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Tt]rue|[Ff]alse|[Nn]one/,\n      variable: /\\b\\w+?\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /{{[\\s\\S]*?}}|{%[\\s\\S]*?%}|{#[\\s\\S]*?#}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n"],"names":["refractorMarkupTemplating","require","django","Prism","register","languages","comment","tag","pattern","lookbehind","alias","delimiter","string","greedy","filter","test","function","keyword","operator","number","boolean","variable","punctuation","markupTemplating","hooks","add","env","buildPlaceholders","tokenizePlaceholders","jinja2","module","exports","displayName","aliases"],"sourceRoot":""}