{"version":3,"sources":["api/LabelsAPI.js","Labels/PostTypeLabels.js","Labels/TaxonomyLabels.js","App.js","index.js"],"names":["replaceQuotes","text","replace","capitalize","s","charAt","toUpperCase","slice","getWords","name","words","split","first","shift","rest","getGender","LefffWords","toLowerCase","e","getLabelName","labelObject","gender","firstWord","firstWordSingular","restWords","hasOwnProperty","plural","label","includes","Diacritics","clean","search","elision","regex","RegExp","indexOf","sprintf","join","getLabel","domain","value","translate","fn","context","PostTypeLabels","singular_name","menu_name","add_new","add_new_item","f","m","edit_item","new_item","view_item","view_items","search_items","not_found","not_found_in_trash","parent_item_colon","all_items","archives","attributes","insert_into_item","uploaded_to_this_item","feature_image","set_featured_image","remove_featured_image","use_featured_image","filter_items_list","filter_by_date","items_list_navigation","items_list","item_published","item_published_privately","item_reverted_to_draft","item_scheduled","item_updated","TaxonomyLabels","popular_items","parent_item","update_item","new_item_name","separate_items_with_commas","add_or_remove_items","choose_from_most_used","no_terms","filter_by_item","most_used","back_to_items","primaryColor","theme","createMuiTheme","background","palette","type","primary","main","App","useHashParam","setName","setType","setGender","setDomain","useState","copied","setCopied","domainValid","setdomainValid","code","labels","maxLength","Math","max","map","l","key","length","forEach","currentKeyLength","currentRepeat","repeat","getFormattedLabels","Object","entries","conf","getLabels","dark","materialDark","operator","color","punctuation","ThemeProvider","CssBaseline","Fragment","AppBar","position","Box","pt","Typography","align","variant","component","gutterBottom","Container","maxWidth","Grid","container","spacing","item","xs","lg","FormControl","margin","RadioGroup","aria-label","onChange","target","row","FormControlLabel","control","Radio","fullWidth","TextField","placeholder","helperText","InputLabelProps","shrink","autoFocus","console","log","checkValidity","inputProps","pattern","error","onCopy","Button","size","disabled","language","style","Snackbar","severity","open","autoHideDuration","message","onClose","event","reason","anchorOrigin","vertical","horizontal","SyntaxHighlighter","registerLanguage","php","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"waAWMA,EAAgB,SAACC,GAuBrB,OAFAA,GADAA,GADAA,GADAA,GAdAA,EAAOA,EACJC,QAAQ,qCAA8B,cACtCA,QAAQ,4CAA6C,cACrDA,QAAQ,aAAc,YACtBA,QAAQ,eAAgB,cACxBA,QAAQ,oBAAqB,cAC7BA,QAAQ,qCAAsC,cAC9CA,QAAQ,iEAAkE,cAC1EA,QAAQ,gGAAiG,YACzGA,QAAQ,OAAQ,UAChBA,QAAQ,UAAW,UACnBA,QAAQ,KAAM,WAGLA,QAAQ,WAAO,MACfA,QAAQ,WAAO,MACfA,QAAQ,WAAO,MACfA,QAAQ,WAAO,MAWvBC,EAAa,SAACC,GAClB,MAAiB,kBAANA,EACF,GAEFA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,IAShCC,EAAW,SAACC,GACvB,IAAMC,EAAQD,EAAKE,MAAM,KACzB,MAAO,CACLC,MAAOF,EAAMG,QACbC,KAAMJ,IAUGK,EAAY,SAACN,GACxB,IACE,OAAOO,EAAWP,EAAKQ,eAAeA,cACtC,MAAOC,GACP,OAAO,OAWLC,EAAe,SAACV,EAAMW,GAAgC,IAAnBC,EAAkB,uDAAT,KAC1CX,EAAQF,EAASC,GAEnBa,EAAYZ,EAAME,MAChBW,EAAoBD,EACpBE,EAAYd,EAAMI,KAGxBQ,EAAYF,EAAYK,eAAe,WAAaL,EAAYM,OAASA,IAAOJ,GAAaA,EAE7F,IAAIK,EAAQP,EAAYO,MAGxB,GAAqB,kBAAVA,GAAgC,OAAVA,EAAgB,CAC3B,IAAD,EAAnB,GAAe,KAAXN,EACFA,EAAM,UAAGN,EAAUQ,UAAb,QAAmC,IAM3C,GAHAI,EAAQA,EAAMN,GAGVD,EAAYK,eAAe,YAAc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKG,SAASC,IAAWC,MAAMR,EAAUjB,OAAO,GAAGY,gBAAiB,CAC9I,IAAMc,EAASX,EAAYY,QAAQD,OAAOV,GAC1C,GAAe,aAAXU,EAAuB,CACzB,IAAME,EAAQ,IAAIC,OAAOH,EAAQ,KACjCJ,EAAQxB,EAAWwB,EAAMzB,QAAQ+B,EAAOb,EAAYY,QAAQ9B,YASlE,OAJ8B,IAA1ByB,EAAMQ,QAAQ,UAChBb,EAAYnB,EAAWmB,IAGlBtB,EAAcoC,kBAAQT,EAAO,CAACL,GAAD,mBAAeE,IAAWa,KAAK,QAW/DC,EAAW,SAAC7B,EAAMW,GAA+C,IAAlCC,EAAiC,uDAAxB,KAAMkB,EAAkB,uDAAT,KACvDC,EAAK,WAAOrB,EAAaV,EAAMW,EAAaC,GAAvC,KAET,GAAIkB,EAAQ,CACV,IAAME,EAAYrB,EAAYK,eAAe,MAAQL,EAAYsB,GAAK,KAChEC,EAAUvB,EAAYK,eAAe,WAA3B,WAA4CL,EAAYuB,QAAxD,OAAuE,GACvFH,EAAK,UAAMC,EAAN,aAAoBD,EAApB,aAA8BG,EAA9B,YAAyCJ,EAAzC,OAGP,OAAOC,GC3IT,IAoOeI,EApOQ,CACrBnC,KAAM,CACJkB,MAAO,OACPD,QAAQ,EACRgB,GAAI,KACJC,QAAS,0BAEXE,cAAe,CACblB,MAAO,OACPe,GAAI,KACJC,QAAS,2BAEXG,UAAW,CACTnB,MAAO,OACPD,QAAQ,GAEVqB,QAAS,CACPpB,MAAO,WAETqB,aAAc,CACZrB,MAAO,CACLsB,EAAG,4BACHC,EAAG,2BAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,WACHC,EAAG,WAELhD,QAAS,WAGbiD,UAAW,CACTxB,MAAO,CACLsB,EAAG,mBACHC,EAAG,oBAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,MACHC,EAAG,OAELhD,QAAS,YAGbkD,SAAU,CACRzB,MAAO,CACLsB,EAAG,gBACHC,EAAG,gBAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,WACHC,EAAG,WAELhD,QAAS,WAGbmD,UAAW,CACT1B,MAAO,CACLsB,EAAG,eACHC,EAAG,gBAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,MACHC,EAAG,OAELhD,QAAS,YAGboD,WAAY,CACV3B,MAAO,gBACPD,QAAQ,GAEV6B,aAAc,CACZ5B,MAAO,2BACPD,QAAQ,GAEV8B,UAAW,CACT7B,MAAO,CACLsB,EAAG,0BACHC,EAAG,0BAGPO,mBAAoB,CAClB9B,MAAO,CACLsB,EAAG,2CACHC,EAAG,2CAGPQ,kBAAmB,CACjB/B,MAAO,CACLsB,EAAG,oBACHC,EAAG,qBAGPS,UAAW,CACThC,MAAO,CACLsB,EAAG,kBACHC,EAAG,iBAELxB,QAAQ,GAEVkC,SAAU,CACRjC,MAAO,mBACPD,QAAQ,GAEVmC,WAAY,CACVlC,MAAO,CACLsB,EAAG,uBACHC,EAAG,qBAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,SACHC,EAAG,OAELhD,QAAS,eAGb4D,iBAAkB,CAChBnC,MAAO,CACLsB,EAAG,0BACHC,EAAG,2BAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,MACHC,EAAG,OAELhD,QAAS,YAGb6D,sBAAuB,CACrBpC,MAAO,CACLsB,EAAG,oCACHC,EAAG,kCAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,MACHC,EAAG,OAELhD,QAAS,SAGb8D,cAAe,CACbrC,MAAO,qBAETsC,mBAAoB,CAClBtC,MAAO,oCAETuC,sBAAuB,CACrBvC,MAAO,sCAETwC,mBAAoB,CAClBxC,MAAO,oCAETyC,kBAAmB,CACjBzC,MAAO,4BACPD,QAAQ,GAEV2C,eAAgB,CACd1C,MAAO,oBAET2C,sBAAuB,CACrB3C,MAAO,kCACPD,QAAQ,GAEV6C,WAAY,CACV5C,MAAO,iBACPD,QAAQ,GAEV8C,eAAgB,CACd7C,MAAO,CACLsB,EAAG,kBACHC,EAAG,mBAGPuB,yBAA0B,CACxB9C,MAAO,CACLsB,EAAG,kCACHC,EAAG,mCAGPwB,uBAAwB,CACtB/C,MAAO,CACLsB,EAAG,iCACHC,EAAG,kCAGPyB,eAAgB,CACdhD,MAAO,CACLsB,EAAG,qBACHC,EAAG,sBAGP0B,aAAc,CACZjD,MAAO,CACLsB,EAAG,uBACHC,EAAG,yBC3BM2B,EA9KQ,CACrBpE,KAAM,CACJkB,MAAO,OACPD,QAAQ,EACRgB,GAAI,KACJC,QAAS,yBAEXE,cAAe,CACblB,MAAO,OACPe,GAAI,KACJC,QAAS,0BAEXG,UAAW,CACTnB,MAAO,OACPD,QAAQ,GAEV6B,aAAc,CACZ5B,MAAO,sBACPD,QAAQ,GAEVoD,cAAe,CACbnD,MAAO,kBACPD,QAAQ,GAEViC,UAAW,CACThC,MAAO,CACLsB,EAAG,kBACHC,EAAG,kBAGP6B,YAAa,CACXpD,MAAO,CACLsB,EAAG,eACHC,EAAG,gBAGPQ,kBAAmB,CACjB/B,MAAO,CACLsB,EAAG,oBACHC,EAAG,qBAGPC,UAAW,CACTxB,MAAO,CACLsB,EAAG,mBACHC,EAAG,oBAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,MACHC,EAAG,OAELhD,QAAS,YAGbmD,UAAW,CACT1B,MAAO,CACLsB,EAAG,eACHC,EAAG,gBAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,MACHC,EAAG,OAELhD,QAAS,YAGb8E,YAAa,CACXrD,MAAO,CACLsB,EAAG,2BACHC,EAAG,4BAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,MACHC,EAAG,OAELhD,QAAS,YAGb8C,aAAc,CACZrB,MAAO,CACLsB,EAAG,4BACHC,EAAG,2BAELlB,QAAS,CACPD,OAAQ,CAAC,UAAW,YACpB7B,QAAS,WAGb+E,cAAe,CACbtD,MAAO,CACLsB,EAAG,0BACHC,EAAG,uBAELlB,QAAS,CACPD,OAAQ,CACNkB,EAAG,WACHC,EAAG,WAELhD,QAAS,WAGbgF,2BAA4B,CAC1BvD,MAAO,wCACPD,QAAQ,GAEVyD,oBAAqB,CACnBxD,MAAO,gCACPD,QAAQ,GAEV0D,sBAAuB,CACrBzD,MAAO,CACLsB,EAAG,+CACHC,EAAG,+CAELxB,QAAQ,GAEV8B,UAAW,CACT7B,MAAO,CACLsB,EAAG,yBACHC,EAAG,yBAGPmC,SAAU,CACR1D,MAAO,CACLsB,EAAG,cACHC,EAAG,eAGPoC,eAAgB,CACd3D,MAAO,oBAET2C,sBAAuB,CACrB3C,MAAO,kCACPD,QAAQ,GAEV6C,WAAY,CACV5C,MAAO,iBACPD,QAAQ,GAEV6D,UAAW,CACT5D,MAAO,CACLsB,EAAG,oBACHC,EAAG,oBAELR,GAAI,KACJhB,QAAQ,EACRiB,QAAS,aAEX6C,cAAe,CACb7D,MAAO,wBACPD,QAAQ,I,OC7IN+D,EAAe,UAEfC,EAAQC,YAAe,CAC3BC,WAAY,UACZC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAMP,MAOG,SAASQ,IAAO,IAAD,EACJC,IAAa,OAAQ,IADjB,mBACrBzF,EADqB,KACf0F,EADe,OAEJD,IAAa,OAAQ,IAFjB,mBAErBJ,EAFqB,KAEfM,EAFe,OAGAF,IAAa,SAAU,IAHvB,mBAGrB7E,EAHqB,KAGbgF,EAHa,OAIAH,IAAa,SAAU,IAJvB,mBAIrB3D,EAJqB,KAIb+D,EAJa,OAKAC,oBAAS,GALT,mBAKrBC,EALqB,KAKbC,EALa,OAMUF,oBAAS,GANnB,mBAMrBG,EANqB,KAMRC,GANQ,KAQvBb,GACHM,EAAQ,aAGV,IAIMQ,GHsHD,SAA4BC,GACjC,IAAMC,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,EAAOI,KAAI,SAACC,GAAD,OAAOA,EAAEC,IAAIC,YAElDR,EAAI,gBAQR,OAPAC,EAAOQ,SAAQ,SAAC1F,GACd,IAAM2F,EAAmB3F,EAAMwF,IAAIC,OAC7BG,EAAgBT,EAAYQ,EAClCV,GAAI,eAAYjF,EAAMwF,IAAlB,aAA0B,IAAIK,OAAOD,GAArC,cAAyD5F,EAAMA,MAA/D,UAENiF,GAAI,KG/HSa,CAFEhH,GAAQiG,EH8GV,SAAmBG,EAAQpG,GAAqC,IAA/BY,EAA8B,uDAArB,KAAMkB,EAAe,uDAAN,KACtE,OAAOmF,OAAOC,QAAQd,GAAQI,KAAI,mCAAEE,EAAF,KAAOS,EAAP,WAAkB,CAAET,IAAKA,EAAKxF,MAAOW,EAAS7B,EAAMmH,EAAMvG,EAAQkB,OG/G/DsF,CAFT,aAAT/B,EAAsBjB,EAAiBjC,EAECnC,EAAMY,EAAQkB,GAAU,IAI7EuF,GAAI,2BACLC,KADK,IAER,2BAA2B,2BACtBA,IAAa,6BADlB,IAEEnC,WAAY,YAEd,0BAA0B,2BACrBmC,IAAa,4BADlB,IAEEnC,WAAY,YAEdoC,SAAU,CACRC,MAAOxC,GAETyC,YAAa,CACXD,MAAOxC,KA2BX,OACE,eAAC0C,EAAA,EAAD,CAAezC,MAAOA,EAAtB,UACE,cAAC0C,EAAA,EAAD,IACA,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAnE,iDAEE,cAACJ,EAAA,EAAD,CAAYC,MAAM,SAASE,UAAU,MAArC,kFAMN,cAACE,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACC,EAAA,EAAD,CAAaV,UAAU,WAAWW,OAAO,SAAzC,SACE,eAACC,EAAA,EAAD,CAAYC,aAAW,OAAOjJ,KAAK,OAAO+B,MAAOsD,EAAM6D,SAAU,SAACzI,GAAD,OAAOkF,EAAQlF,EAAE0I,OAAOpH,QAAQqH,KAAG,EAApG,UACE,cAACC,EAAA,EAAD,CAAkBtH,MAAM,YAAYuH,QAAS,cAACC,EAAA,EAAD,CAAO/B,MAAM,YAActG,MAAM,wBAC9E,cAACmI,EAAA,EAAD,CAAkBtH,MAAM,WAAWuH,QAAS,cAACC,EAAA,EAAD,CAAO/B,MAAM,YAActG,MAAM,mBAIjF,cAAC4H,EAAA,EAAD,CAAaU,WAAS,EAACrB,QAAQ,WAAWY,OAAO,SAAjD,SACE,cAACU,EAAA,EAAD,CACEP,SAzCK,SAACzI,GACpB,IAAMR,EAAQF,EAASC,GACjBY,EAASN,EAAUL,EAAME,OAC/BuF,EAAQjF,EAAE0I,OAAOpH,OACjB6D,EAAS,OAAChF,QAAD,IAACA,IAAU,KAsCNM,MAAgB,cAATmE,EAAuB,6BAA+B,sBAC7DtD,MAAO/B,EACPmI,QAAQ,WACRuB,YAAY,UACZC,WAAW,iCACXC,gBAAiB,CACfC,QAAQ,GAEVC,WAAS,MAIb,cAAChB,EAAA,EAAD,CAAaU,WAAS,EAACrB,QAAQ,WAAWY,OAAO,SAAjD,SACE,cAACU,EAAA,EAAD,CACEP,SAjDO,SAACzI,GACtBoF,EAAUpF,EAAE0I,OAAOpH,OAEnBgI,QAAQC,IAAIvJ,EAAE0I,OAAOc,iBAErB/D,GAAezF,EAAE0I,OAAOc,kBA6CV/I,MAAM,UACNa,MAAOD,EACPqG,QAAQ,WACRuB,YAAY,UACZC,WAAY1D,EAAc,kCAAoC,mBAC9D2D,gBAAiB,CACfC,QAAQ,GAEVK,WAAY,CAAEC,QAAS,WACvBC,OAAQnE,MAIZ,cAAC6C,EAAA,EAAD,CAAaV,UAAU,WAAvB,SACE,eAACY,EAAA,EAAD,CAAYI,KAAG,EAACH,aAAW,OAAOjJ,KAAK,OAAO+B,MAAOnB,EAAQsI,SAAU,SAACzI,GAAD,OAAOmF,EAAUnF,EAAE0I,OAAOpH,QAAjG,UACE,cAACsH,EAAA,EAAD,CAAkBtH,MAAM,IAAIuH,QAAS,cAACC,EAAA,EAAD,CAAO/B,MAAM,YAActG,MAAM,eACtE,cAACmI,EAAA,EAAD,CAAkBtH,MAAM,IAAIuH,QAAS,cAACC,EAAA,EAAD,CAAO/B,MAAM,YAActG,MAAM,kBAI1E,cAAC,kBAAD,CAAiB1B,KAAM2G,GAAMkE,OAAQ,kBAAMrK,GAAQgG,GAAU,IAA7D,SACE,cAAC8C,EAAA,EAAD,CAAaU,WAAS,EAACrB,QAAQ,WAAWY,OAAO,SAAjD,SACE,cAACuB,EAAA,EAAD,CAAQnC,QAAQ,YAAYX,MAAM,UAAU+C,KAAK,QAAQf,WAAS,EAACgB,UAAWxK,EAA9E,2BAMN,cAACwI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACd,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,CAAmByC,SAAS,MAAMC,MAAOrD,GAAzC,SACGlB,cAMX,cAACwE,EAAA,EAAD,CAAUC,SAAS,UAAUC,KAAM9E,EAAQ+E,iBAAkB,IAAMC,QAAQ,aAAUC,QAtGlE,SAACC,EAAOC,GAChB,cAAXA,GAIJlF,GAAU,IAiG0GmF,aAAc,CAAEC,SAAU,SAAUC,WAAY,gBA5IxKC,IAAkBC,iBAAiB,MAAOC,KCpB1CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnG,EAAD,MAEFoG,SAASC,eAAe,W","file":"static/js/main.1089e31e.chunk.js","sourcesContent":["import plural from \"rosaenlg-pluralize-fr\";\nimport LefffWords from \"french-words-gender-lefff/dist/words.json\";\nimport { sprintf } from \"sprintf-js\";\nimport Diacritics from \"diacritic\";\n\n/**\n * Replace quotes\n *\n * @param {String} text\n * @returns\n */\nconst replaceQuotes = (text) => {\n  // Revert encoded chars so the regex mystery\n  // below works properly\n\n  text = text\n    .replace(/(\\W|^)\"([^\\s\\!\\?:;\\.,‽»])/g, \"$1\\u201c$2\") // beginning \"\n    .replace(/(\\u201c[^\"]*)\"([^\"]*$|[^\\u201c\"]*\\u201c)/g, \"$1\\u201d$2\") // ending \"\n    .replace(/([^0-9])\"/g, \"$1\\u201d\") // remaining \" at end of word\n    .replace(/(\\W|^)'(\\S)/g, \"$1\\u2018$2\") // beginning '\n    .replace(/([a-z])'([a-z])/gi, \"$1\\u2019$2\") // conjunction's possession\n    .replace(/((\\u2018[^']*)|[a-z])'([^0-9]|$)/gi, \"$1\\u2019$3\") // ending '\n    .replace(/(\\u2018)([0-9]{2}[^\\u2019]*)(\\u2018([^0-9]|$)|$|\\u2019[a-z])/gi, \"\\u2019$2$3\") // abbrev. years like '93\n    .replace(/(\\B|^)\\u2018(?=([^\\u2019]*\\u2019\\b)*([^\\u2019\\u2018]*\\W[\\u2019\\u2018]\\b|[^\\u2019\\u2018]*$))/gi, \"$1\\u2019\") // backwards apostrophe\n    .replace(/'''/g, \"\\u2034\") // triple prime\n    .replace(/(\"|'')/g, \"\\u2033\") // double prime\n    .replace(/'/g, \"\\u2032\");\n\n  // Allow escaped quotes\n  text = text.replace(/\\\\“/, '\"');\n  text = text.replace(/\\\\”/, '\"');\n  text = text.replace(/\\\\’/, \"'\");\n  text = text.replace(/\\\\‘/, \"'\");\n\n  return text;\n};\n\n/**\n * Capitalize\n *\n * @param {String} s\n * @returns {String}\n */\nconst capitalize = (s) => {\n  if (typeof s !== \"string\") {\n    return \"\";\n  }\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\n/**\n * Get words\n *\n * @param {String} name\n * @returns {Object}\n */\nexport const getWords = (name) => {\n  const words = name.split(\" \");\n  return {\n    first: words.shift(),\n    rest: words,\n  };\n};\n\n/**\n * Get name gender\n *\n * @param {String} name\n * @returns\n */\nexport const getGender = (name) => {\n  try {\n    return LefffWords[name.toLowerCase()].toLowerCase();\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * Get label name\n *\n * @param {String} name\n * @param {Object} labelObject\n * @returns {String}\n */\nconst getLabelName = (name, labelObject, gender = null) => {\n  const words = getWords(name);\n\n  let firstWord = words.first;\n  const firstWordSingular = firstWord;\n  const restWords = words.rest;\n\n  // Pluralize\n  firstWord = labelObject.hasOwnProperty(\"plural\") && labelObject.plural ? plural(firstWord) : firstWord;\n\n  let label = labelObject.label;\n\n  // Handle gender\n  if (typeof label === \"object\" && label !== null) {\n    if (gender === \"\") {\n      gender = getGender(firstWordSingular) ?? \"f\";\n    }\n\n    label = label[gender];\n\n    // Handle elision\n    if (labelObject.hasOwnProperty(\"elision\") && [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"h\"].includes(Diacritics.clean(firstWord.charAt(0).toLowerCase()))) {\n      const search = labelObject.elision.search[gender];\n      if (search !== \"nouvelle\") {\n        const regex = new RegExp(search, \"i\");\n        label = capitalize(label.replace(regex, labelObject.elision.replace));\n      }\n    }\n  }\n\n  if (label.indexOf(\"%1$s\") === 0) {\n    firstWord = capitalize(firstWord);\n  }\n\n  return replaceQuotes(sprintf(label, [firstWord, ...restWords].join(\" \")));\n};\n\n/**\n * Get label\n *\n * @param {String} name\n * @param {Object} labelObject\n * @param {String} domain\n * @returns\n */\nconst getLabel = (name, labelObject, gender = null, domain = null) => {\n  let value = `'${getLabelName(name, labelObject, gender)}'`;\n\n  if (domain) {\n    const translate = labelObject.hasOwnProperty(\"fn\") ? labelObject.fn : \"__\";\n    const context = labelObject.hasOwnProperty(\"context\") ? `'${labelObject.context}', ` : \"\";\n    value = `${translate}( ${value}, ${context}'${domain}' )`;\n  }\n\n  return value;\n};\n\n/**\n * Get labels\n *\n * @param {Object} labels\n * @param {String} name\n * @param {String} domain\n * @returns {Object}\n */\nexport default function getLabels(labels, name, gender = null, domain = null) {\n  return Object.entries(labels).map(([key, conf]) => ({ key: key, label: getLabel(name, conf, gender, domain) }));\n}\n\n/**\n * Get formatted labels\n *\n * @param {Object} labels\n * @returns\n */\nexport function getFormattedLabels(labels) {\n  const maxLength = Math.max(...labels.map((l) => l.key.length));\n\n  let code = `$labels = [\\n`;\n  labels.forEach((label) => {\n    const currentKeyLength = label.key.length;\n    const currentRepeat = maxLength - currentKeyLength;\n    code += `    '${label.key}' ${\" \".repeat(currentRepeat)}=> ${label.label},\\n`;\n  });\n  code += `];`;\n\n  return code;\n}\n","const PostTypeLabels = {\n  name: {\n    label: \"%1$s\",\n    plural: true,\n    fn: \"_x\",\n    context: \"post type general name\",\n  },\n  singular_name: {\n    label: \"%1$s\",\n    fn: \"_x\",\n    context: \"post type singular name\",\n  },\n  menu_name: {\n    label: \"%1$s\",\n    plural: true,\n  },\n  add_new: {\n    label: \"Ajouter\",\n  },\n  add_new_item: {\n    label: {\n      f: \"Ajouter une nouvelle %1$s\",\n      m: \"Ajouter un nouveau %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"nouvelle\",\n        m: \"nouveau\",\n      },\n      replace: \"nouvel\",\n    },\n  },\n  edit_item: {\n    label: {\n      f: \"Modifier la %1$s\",\n      m: \"Modifier le %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"la \",\n        m: \"le \",\n      },\n      replace: \"l’\",\n    },\n  },\n  new_item: {\n    label: {\n      f: \"Nouvelle %1$s\",\n      m: \"Nouveau %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"nouvelle\",\n        m: \"nouveau\",\n      },\n      replace: \"nouvel\",\n    },\n  },\n  view_item: {\n    label: {\n      f: \"Voir la %1$s\",\n      m: \"Voir le %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"la \",\n        m: \"le \",\n      },\n      replace: \"l’\",\n    },\n  },\n  view_items: {\n    label: \"Voir les %1$s\",\n    plural: true,\n  },\n  search_items: {\n    label: \"Rechercher dans les %1$s\",\n    plural: true,\n  },\n  not_found: {\n    label: {\n      f: \"Aucune %1$s trouvée.\",\n      m: \"Aucun %1$s trouvé.\",\n    },\n  },\n  not_found_in_trash: {\n    label: {\n      f: \"Aucune %1$s trouvée dans la corbeille\",\n      m: \"Aucun %1$s trouvé dans la corbeille\",\n    },\n  },\n  parent_item_colon: {\n    label: {\n      f: \"%1$s parente :\",\n      m: \"%1$s parent :\",\n    },\n  },\n  all_items: {\n    label: {\n      f: \"Toutes les %1$s\",\n      m: \"Tous les %1$s\",\n    },\n    plural: true,\n  },\n  archives: {\n    label: \"Archive des %1$s\",\n    plural: true,\n  },\n  attributes: {\n    label: {\n      f: \"Attributs de la %1$s\",\n      m: \"Attributs du %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"de la \",\n        m: \"du \",\n      },\n      replace: \"de l’\",\n    },\n  },\n  insert_into_item: {\n    label: {\n      f: \"Insérer dans la %1$s\",\n      m: \"Insérer dans le %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"la \",\n        m: \"le \",\n      },\n      replace: \"l’\",\n    },\n  },\n  uploaded_to_this_item: {\n    label: {\n      f: \"Téléversé sur cette %1$s\",\n      m: \"Téléversé sur ce %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"la \",\n        m: \"ce \",\n      },\n      replace: \"cet \",\n    },\n  },\n  feature_image: {\n    label: \"Image à la une\",\n  },\n  set_featured_image: {\n    label: \"Utiliser comme image à la une\",\n  },\n  remove_featured_image: {\n    label: \"Supprimer l’image à la une\",\n  },\n  use_featured_image: {\n    label: \"Utiliser comme image à la une\",\n  },\n  filter_items_list: {\n    label: \"Filtrer la liste des %1$s\",\n    plural: true,\n  },\n  filter_by_date: {\n    label: \"Filtrer par date\",\n  },\n  items_list_navigation: {\n    label: \"Navigation de la liste des %1$s\",\n    plural: true,\n  },\n  items_list: {\n    label: \"Liste des %1$s\",\n    plural: true,\n  },\n  item_published: {\n    label: {\n      f: \"%1$s publiée\",\n      m: \"%1$s publié\",\n    },\n  },\n  item_published_privately: {\n    label: {\n      f: \"%1$s mise en ligne en privé.\",\n      m: \"%1$s mis en ligne en privé.\",\n    },\n  },\n  item_reverted_to_draft: {\n    label: {\n      f: \"%1$s reconvertie en brouillon.\",\n      m: \"%1$s reconverti en brouillon.\",\n    },\n  },\n  item_scheduled: {\n    label: {\n      f: \"%1$s planifiée.\",\n      m: \"%1$s planifié.\",\n    },\n  },\n  item_updated: {\n    label: {\n      f: \"%1$s mise à jour.\",\n      m: \"%1$s mis à jour.\",\n    },\n  },\n  // item_link: {\n  //     label: {\n  //         f: 'Lien de la %1$s',\n  //         m: 'Lien du %1$s',\n  //     },\n  //     fn: '_x',\n  //     context: 'navigation link block title',\n  //     elision: {\n  //         search: ['du ', 'la '],\n  //         replace: 'de l’',\n  //     },\n  // },\n  // item_link_description: {\n  //     label: {\n  //         f: 'Un lien vers la %1$s',\n  //         m: 'Un lien vers le %1$s',\n  //     },\n  //     elision: {\n  //         search: ['le ', 'la '],\n  //         replace: 'l’',\n  //     },\n  // },\n};\n\nexport default PostTypeLabels;\n","const TaxonomyLabels = {\n  name: {\n    label: \"%1$s\",\n    plural: true,\n    fn: \"_x\",\n    context: \"taxonomy general name\",\n  },\n  singular_name: {\n    label: \"%1$s\",\n    fn: \"_x\",\n    context: \"taxonomy singular name\",\n  },\n  menu_name: {\n    label: \"%1$s\",\n    plural: true,\n  },\n  search_items: {\n    label: \"Rechercher des %1$s\",\n    plural: true,\n  },\n  popular_items: {\n    label: \"%1$s populaires\",\n    plural: true,\n  },\n  all_items: {\n    label: {\n      f: \"Toutes les %1$s\",\n      m: \"Tous les %1$s\",\n    },\n  },\n  parent_item: {\n    label: {\n      f: \"%1$s parente\",\n      m: \"%1$s parent\",\n    },\n  },\n  parent_item_colon: {\n    label: {\n      f: \"%1$s parente :\",\n      m: \"%1$s parent :\",\n    },\n  },\n  edit_item: {\n    label: {\n      f: \"Modifier la %1$s\",\n      m: \"Modifier le %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"la \",\n        m: \"le \",\n      },\n      replace: \"l’\",\n    },\n  },\n  view_item: {\n    label: {\n      f: \"Voir la %1$s\",\n      m: \"Voir le %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"la \",\n        m: \"le \",\n      },\n      replace: \"l’\",\n    },\n  },\n  update_item: {\n    label: {\n      f: \"Mettre à jour la %1$s\",\n      m: \"Mettre à jour le %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"la \",\n        m: \"le \",\n      },\n      replace: \"l’\",\n    },\n  },\n  add_new_item: {\n    label: {\n      f: \"Ajouter une nouvelle %1$s\",\n      m: \"Ajouter un nouveau %1$s\",\n    },\n    elision: {\n      search: [\"nouveau\", \"nouvelle\"],\n      replace: \"nouvel\",\n    },\n  },\n  new_item_name: {\n    label: {\n      f: \"Nom de la nouvelle %1$s\",\n      m: \"Nom du nouveau %1$s\",\n    },\n    elision: {\n      search: {\n        f: \"nouvelle\",\n        m: \"nouveau\",\n      },\n      replace: \"nouvel\",\n    },\n  },\n  separate_items_with_commas: {\n    label: \"Séparer les %1$s avec des virgules\",\n    plural: true,\n  },\n  add_or_remove_items: {\n    label: \"Ajouter ou supprimer des %1$s\",\n    plural: true,\n  },\n  choose_from_most_used: {\n    label: {\n      f: \"Choisir parmi les %1$s les plus utilisées\",\n      m: \"Choisir parmi les %1$s les plus utilisés\",\n    },\n    plural: true,\n  },\n  not_found: {\n    label: {\n      f: \"Aucune %1$s trouvée\",\n      m: \"Aucun %1$s trouvé\",\n    },\n  },\n  no_terms: {\n    label: {\n      f: \"Aucune %1$s\",\n      m: \"Aucun %1$s\",\n    },\n  },\n  filter_by_item: {\n    label: \"Filtrer par %1$s\",\n  },\n  items_list_navigation: {\n    label: \"Navigation de la liste des %1$s\",\n    plural: true,\n  },\n  items_list: {\n    label: \"Liste des %1$s\",\n    plural: true,\n  },\n  most_used: {\n    label: {\n      f: \"Plus utilisées\",\n      m: \"Plus utilisés\",\n    },\n    fn: \"_x\",\n    plural: true,\n    context: \"most used\",\n  },\n  back_to_items: {\n    label: \"&larr; Aller aux %1$s\",\n    plural: true,\n  },\n  // item_link: {\n  //   label: \"Tag Link\",\n  //   fn: \"_x\",\n  //   context: \"navigation link block title\",\n  // },\n  // item_link_description: {\n  //   label: {\n  //     f: \"Un lien vers la %1$s\",\n  //     m: \"Un lien vers le %1$s\",\n  //   },\n  //   elision: {\n  //     search: [\"le \", \"la \"],\n  //     replace: \"l’\",\n  //   },\n  //   fn: \"_x\",\n  //   context: \"navigation link block description\",\n  // },\n};\n\nexport default TaxonomyLabels;\n","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { AppBar, Snackbar, Typography, Box, CssBaseline, Grid, Container, Button, TextField, FormControl, Radio, RadioGroup, FormControlLabel } from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { PrismAsyncLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport php from \"react-syntax-highlighter/dist/esm/languages/prism/php\";\nimport materialDark from \"react-syntax-highlighter/dist/esm/styles/prism/material-dark\";\nimport useHashParam from \"use-hash-param\";\nimport getLabels, { getFormattedLabels, getGender, getWords } from \"./api/LabelsAPI\";\nimport PostTypeLabels from \"./Labels/PostTypeLabels\";\nimport TaxonomyLabels from \"./Labels/TaxonomyLabels\";\n\nconst primaryColor = \"#1c8bbf\";\n\nconst theme = createMuiTheme({\n  background: \"#1a1a1a\",\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: primaryColor,\n    },\n  },\n});\n\nSyntaxHighlighter.registerLanguage(\"php\", php);\n\nexport default function App() {\n  const [name, setName] = useHashParam(\"name\", \"\");\n  const [type, setType] = useHashParam(\"type\", \"\");\n  const [gender, setGender] = useHashParam(\"gender\", \"\");\n  const [domain, setDomain] = useHashParam(\"domain\", \"\");\n  const [copied, setCopied] = useState(false);\n  const [domainValid, setdomainValid] = useState(true);\n\n  if (!type) {\n    setType(\"post-type\");\n  }\n\n  const labelsType = type === \"taxonomy\" ? TaxonomyLabels : PostTypeLabels;\n\n  const labels = name && domainValid ? getLabels(labelsType, name, gender, domain) : [];\n\n  const code = getFormattedLabels(labels);\n\n  const dark = {\n    ...materialDark,\n    'code[class*=\"language-\"]': {\n      ...materialDark['code[class*=\"language-\"]'],\n      background: \"#232323\",\n    },\n    'pre[class*=\"language-\"]': {\n      ...materialDark['pre[class*=\"language-\"]'],\n      background: \"#232323\",\n    },\n    operator: {\n      color: primaryColor,\n    },\n    punctuation: {\n      color: primaryColor,\n    },\n  };\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setCopied(false);\n  };\n\n  const onNameChange = (e) => {\n    const words = getWords(name);\n    const gender = getGender(words.first);\n    setName(e.target.value);\n    setGender(gender ?? \"\");\n  };\n\n  const onDomainChange = (e) => {\n    setDomain(e.target.value);\n\n    console.log(e.target.checkValidity());\n\n    setdomainValid(e.target.checkValidity());\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <React.Fragment>\n        <AppBar position=\"static\">\n          <Box pt={1}>\n            <Typography align=\"center\" variant=\"h5\" component=\"h1\" gutterBottom>\n              Générateur de labels WordPress\n              <Typography align=\"center\" component=\"div\">\n                pour (type de publication | taxonomie) personnalisé•e\n              </Typography>\n            </Typography>\n          </Box>\n        </AppBar>\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={4}>\n            <Grid item xs={12} lg={4}>\n              <FormControl component=\"fieldset\" margin=\"normal\">\n                <RadioGroup aria-label=\"type\" name=\"type\" value={type} onChange={(e) => setType(e.target.value)} row>\n                  <FormControlLabel value=\"post-type\" control={<Radio color=\"primary\" />} label=\"Type de publication\" />\n                  <FormControlLabel value=\"taxonomy\" control={<Radio color=\"primary\" />} label=\"Taxonomie\" />\n                </RadioGroup>\n              </FormControl>\n\n              <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n                <TextField\n                  onChange={onNameChange}\n                  label={type === \"post-type\" ? \"Nom du type de publication\" : \"Nom de la taxonomie\"}\n                  value={name}\n                  variant=\"outlined\"\n                  placeholder=\"Article\"\n                  helperText=\"Renseigner un nom au singulier\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  autoFocus\n                />\n              </FormControl>\n\n              <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n                <TextField\n                  onChange={onDomainChange}\n                  label=\"Domaine\"\n                  value={domain}\n                  variant=\"outlined\"\n                  placeholder=\"domaine\"\n                  helperText={domainValid ? \"Renseigner un domaine ([a-z-]+)\" : \"Domaine invalide\"}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  inputProps={{ pattern: \"[a-z-]+\" }}\n                  error={!domainValid}\n                />\n              </FormControl>\n\n              <FormControl component=\"fieldset\">\n                <RadioGroup row aria-label=\"type\" name=\"type\" value={gender} onChange={(e) => setGender(e.target.value)}>\n                  <FormControlLabel value=\"f\" control={<Radio color=\"primary\" />} label=\"Féminin\" />\n                  <FormControlLabel value=\"m\" control={<Radio color=\"primary\" />} label=\"Masculin\" />\n                </RadioGroup>\n              </FormControl>\n\n              <CopyToClipboard text={code} onCopy={() => name && setCopied(true)}>\n                <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n                  <Button variant=\"contained\" color=\"primary\" size=\"large\" fullWidth disabled={!name}>\n                    Copier\n                  </Button>\n                </FormControl>\n              </CopyToClipboard>\n            </Grid>\n            <Grid item xs={12} lg={8}>\n              <Box pt={3}>\n                <SyntaxHighlighter language=\"php\" style={dark}>\n                  {code}\n                </SyntaxHighlighter>\n              </Box>\n            </Grid>\n          </Grid>\n        </Container>\n        <Snackbar severity=\"success\" open={copied} autoHideDuration={3000} message=\"Copié !\" onClose={handleSnackClose} anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }} />\n      </React.Fragment>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}