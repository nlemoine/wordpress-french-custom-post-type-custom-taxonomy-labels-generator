{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_smarty.4b534fe0.chunk.js","mappings":"uHACA,IAAIA,EAA4BC,EAAQ,KAIxC,SAASC,EAAOC,GACdA,EAAMC,SAASJ,GACd,SAAWG,GACVA,EAAME,UAAUH,OAAS,CACvBI,QAAS,CACPC,QAAS,oBACTC,QAAQ,GAEV,eAAgB,CACdD,QAAS,4BACTC,QAAQ,EACRC,OAAQ,CACNP,OAAQ,CACNK,QAAS,sBACTE,OAAQ,MAEVC,IAAK,CACHH,QAAS,UACTI,MAAO,eACPF,OAAQN,EAAME,UAAUK,OAI9BE,OAAQ,CACN,CACEL,QAAS,wBACTC,QAAQ,EACRC,OAAQ,CACNI,cAAe,CACbN,QAAS,qBACTE,OAAQ,CACN,4BAA6B,CAC3BF,QAAS,cACTI,MAAO,eAETG,WAAY,CACVP,QAAS,UACTE,OAAQ,QAIdM,SAAU,UAGd,CACER,QAAS,wBACTC,QAAQ,IAGZQ,QAAS,CACPT,QAAS,6BACTU,YAAY,EACZT,QAAQ,GAEVU,UAAW,CACTX,QAAS,aACTC,QAAQ,EACRG,MAAO,eAETQ,OAAQ,+DACRJ,SAAU,CACR,cACA,cACA,CACER,QAAS,kCACTU,YAAY,GAEd,CACEV,QAAS,sBACTU,YAAY,IAGhBG,SAAU,CACRb,QAAS,wCACTU,YAAY,GAEd,YAAa,uBACbI,QAAS,mCACTC,YAAa,oBACbC,SAAU,CACR,mCACA,iDACA,mDAGJpB,EAAME,UAAUH,OAAO,gBAAgBO,OAAOP,OAAOO,OACnDN,EAAME,UAAUH,OAClBC,EAAME,UAAUH,OAAOU,OAAO,GAAGH,OAAOI,cAAcJ,OAAOK,WAAWL,OACtEN,EAAME,UAAUH,OAClB,IAAIU,EAAS,8CACTY,EAAgBC,OAElB,mBAAmBC,OACjB,IACA,2BAA2BA,OAC3B,IACA,uEAAuEA,OAAOC,QAC5E,UACA,WACE,OAAOf,EAAOc,MAChB,IAEJ,KAEFvB,EAAMyB,MAAMC,IAAI,mBAAmB,SAAUC,GAC3C,IAEIC,GAAoB,EACxB5B,EAAME,UAAU,qBAAqB2B,kBACnCF,EACA,SACAN,GACA,SAAUS,GAKR,MAXmB,eAQfA,IACFF,GAAoB,IAEjBA,IAZgB,cAafE,IACFF,GAAoB,IAEf,EAGX,GAEJ,IACA5B,EAAMyB,MAAMC,IAAI,kBAAkB,SAAUC,GAC1C3B,EAAME,UAAU,qBAAqB6B,qBAAqBJ,EAAK,SACjE,GACD,CAhIA,CAgIE3B,EACL,CAtIAgC,EAAOC,QAAUlC,EACjBA,EAAOmC,YAAc,SACrBnC,EAAOoC,QAAU,E","sources":["../node_modules/refractor/lang/smarty.js"],"sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n          },\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [\n        {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^[{`]|[`}]$/,\n                  alias: 'punctuation'\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: null // see below\n                }\n              }\n            },\n            variable: /\\$\\w+/\n          }\n        },\n        {\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n          greedy: true\n        }\n      ],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n      ]\n    }\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\n      Prism.languages.smarty\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\n      Prism.languages.smarty\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\n    var smartyPattern = RegExp(\n      // comments\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\n        '|' + // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n        '|' + // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n          /<str>/g,\n          function () {\n            return string.source\n          }\n        ),\n      'g'\n    ) // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}'\n      var smartyLiteralEnd = '{/literal}'\n      var smartyLiteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLiteralEnd) {\n            smartyLiteralMode = false\n          }\n          if (!smartyLiteralMode) {\n            if (match === smartyLiteralStart) {\n              smartyLiteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n"],"names":["refractorMarkupTemplating","require","smarty","Prism","register","languages","comment","pattern","greedy","inside","php","alias","string","interpolation","expression","variable","keyword","lookbehind","delimiter","number","function","boolean","punctuation","operator","smartyPattern","RegExp","source","replace","hooks","add","env","smartyLiteralMode","buildPlaceholders","match","tokenizePlaceholders","module","exports","displayName","aliases"],"sourceRoot":""}